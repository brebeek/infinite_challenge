[MAIN]
testing = test
path_encodings = encodings/
path_test = test/

[LOG]
logfile_dir = temp/logs/

; parameters required for updating database with results of phase 1 (skull detection) and phase 2 (face rec)
[AWS RDS]
endpoint = database-infc.cu1hhk7e8q1f.ap-southeast-1.rds.amazonaws.com
port = 1433
db_name = Infinite_Challenge
uname = db_user
result_table_name = skull

[Phase1]
result_file_path = temp/results.csv
output_directory_path = temp/phase1/out
; sampling period of frames in video being processed, higher value increases processing but also increases probability
; of missing skulls
video_sample_rate = 1300
; parameters required for running skull detection on azure
skull_confidence_threshold = 0.85
skull_model_version = skull-070720
display = False
upload_images = False

[Phase2]
; csv file containing list of images to process
result_file_path = temp/results.csv
input_directory_path = temp/phase1/out
output_directory_path = temp/phase2/out
; parameters required for running azure face client to detect and identify faces
endpoint = https://challengerecognition.cognitiveservices.azure.com/
person_group_id = infinite-challenge-group
label_and_save = False
upload_images = False
; parameters required for running skull detection using yolo

[Phase3]
result_file_path = temp/results.csv
db_endpoint = database-infc.cu1hhk7e8q1f.ap-southeast-1.rds.amazonaws.com
db_name = Infinite_Challenge
db_tablename = skull
db_username = db_user


[YOLO]
image_num = 128
path_yolov5 = dataset/skull/yolov5
path_test = dataset/skull/test_infer
path_cache = dataset/skull/cache
path_result_cache = dataset/skull/result_cache

; parameters required for running face identification using face_recognition python library
[FACE FR]
known_face_encodings = encodings/encodings_28_Jun_20.pickle
detection_method = cnn
